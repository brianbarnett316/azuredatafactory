{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "BrianBa-ADF"
		},
		"BlobStorageGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'BlobStorageGen2'"
		},
		"ProfiseeSql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ProfiseeSql'"
		},
		"Salesforce1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Salesforce1'"
		},
		"Salesforce1_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'Salesforce1'"
		},
		"BlobStorageGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://brianbastorageadlsgen2.dfs.core.windows.net"
		},
		"Profisee REST API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://profiseepreview.eastus.cloudapp.azure.com/Profisee/rest/v1"
		},
		"Salesforce1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://login.salesforce.com"
		},
		"Salesforce1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tye3950@yahoo.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorageGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Data Lake Storage Gen2 container.",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('BlobStorageGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('BlobStorageGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProfiseeSql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ProfiseeSql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureIREastUS')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputBlobCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Data Lake Storage Gen2 container for CSV format.",
				"linkedServiceName": {
					"referenceName": "BlobStorageGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputBlobJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Data Lake Storage Gen2 container for JSON format.",
				"linkedServiceName": {
					"referenceName": "BlobStorageGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputBlobCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Data Lake Storage Gen2 container for CSV format.",
				"linkedServiceName": {
					"referenceName": "BlobStorageGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputBlobJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Data Lake Storage Gen2 container for JSON format.",
				"linkedServiceName": {
					"referenceName": "BlobStorageGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProfiseeTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ProfiseeSql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Code",
						"type": "nvarchar"
					},
					{
						"name": "NewCode",
						"type": "nvarchar"
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductMergeParent",
						"type": "nvarchar"
					},
					{
						"name": "ProductSubCategory",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "Class",
						"type": "nvarchar"
					},
					{
						"name": "Style",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "decimal",
						"precision": 36,
						"scale": 2
					},
					{
						"name": "SafetyStockLevel",
						"type": "decimal",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "ReorderPoint",
						"type": "decimal",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "MSRP",
						"type": "decimal",
						"precision": 34,
						"scale": 4
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 34,
						"scale": 4
					},
					{
						"name": "DaysToManufacture",
						"type": "decimal",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "DealerCost",
						"type": "decimal",
						"precision": 36,
						"scale": 2
					},
					{
						"name": "DocumentationURL",
						"type": "nvarchar"
					},
					{
						"name": "SellStartDate",
						"type": "date"
					},
					{
						"name": "SellEndDate",
						"type": "datetime2",
						"scale": 3
					},
					{
						"name": "SizeUoM",
						"type": "nvarchar"
					},
					{
						"name": "WeightUoM",
						"type": "nvarchar"
					},
					{
						"name": "InHouseManufacture",
						"type": "nvarchar"
					},
					{
						"name": "FinishedGoodIndicator",
						"type": "nvarchar"
					},
					{
						"name": "DiscontinuedItemInd",
						"type": "nvarchar"
					},
					{
						"name": "DiscontiuedDate",
						"type": "date"
					},
					{
						"name": "ProductLine",
						"type": "nvarchar"
					},
					{
						"name": "DealerCostCurrencyCode",
						"type": "nvarchar"
					},
					{
						"name": "MSRPCurrencyCode",
						"type": "nvarchar"
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "testMaster",
						"type": "nvarchar"
					},
					{
						"name": "productMaster",
						"type": "nvarchar"
					},
					{
						"name": "productScore",
						"type": "decimal",
						"precision": 31,
						"scale": 7
					},
					{
						"name": "productStatus",
						"type": "nvarchar"
					},
					{
						"name": "productRecordSource",
						"type": "nvarchar"
					},
					{
						"name": "ApprovedMatchCount",
						"type": "decimal",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "ProposedMatchCount",
						"type": "decimal",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "Picture",
						"type": "nvarchar"
					},
					{
						"name": "Match Status",
						"type": "nvarchar"
					},
					{
						"name": "Match Group",
						"type": "nvarchar"
					},
					{
						"name": "Match Member",
						"type": "nvarchar"
					},
					{
						"name": "Match Strategy",
						"type": "nvarchar"
					},
					{
						"name": "Match DateTime",
						"type": "date"
					},
					{
						"name": "Match MultiGroup",
						"type": "nvarchar"
					},
					{
						"name": "Match User",
						"type": "nvarchar"
					},
					{
						"name": "SA1",
						"type": "nvarchar"
					},
					{
						"name": "SA2",
						"type": "nvarchar"
					},
					{
						"name": "SA3",
						"type": "nvarchar"
					},
					{
						"name": "MergeStatus",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProfiseeSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Profisee REST API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Profisee REST API",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Profisee REST API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AzureIREastUS",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureIREastUS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('Salesforce1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('Salesforce1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_securityToken')]"
					}
				},
				"connectVia": {
					"referenceName": "AzureIREastUS",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureIREastUS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProfiseeRESTAPI_Members_Get')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Profisee members get REST API call.",
				"linkedServiceName": {
					"referenceName": "Profisee REST API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entityId": {
						"type": "string"
					},
					"pageSize": {
						"type": "int",
						"defaultValue": 1000
					},
					"attributes": {
						"type": "string",
						"defaultValue": " "
					},
					"filter": {
						"type": "string",
						"defaultValue": " "
					},
					"orderBy": {
						"type": "string",
						"defaultValue": " "
					},
					"dbaFormat": {
						"type": "int",
						"defaultValue": 1
					},
					"codes": {
						"type": "string",
						"defaultValue": " "
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('members/',\ndataset().entityId, \n'/?pageSize=', string(dataset().pageSize),\n'&attributes=', dataset().attributes,\n'&filter=', dataset().filter,\n'&orderBy=', dataset().orderBy,\n'&codes=', dataset().codes,\n'&dbaFormat=', string(dataset().dbaFormat)\n)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Profisee REST API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProfiseeRESTAPI_Members_Update')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Profisee members update REST API call.",
				"linkedServiceName": {
					"referenceName": "Profisee REST API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entityId": {
						"type": "string"
					},
					"isUpsert": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('members/',\ndataset().entityId, \n'/?isUpsert=',string(dataset().isUpsert)\n)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Profisee REST API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceAccount')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Salesforce1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "Account"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Salesforce1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy from CSV to Profisee REST API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy CSV to REST API",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set EntityName variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "RestSink",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": 10,
								"requestMethod": "PATCH",
								"writeBatchSize": 10000,
								"additionalHeaders": {
									"x-api-key": {
										"value": "@pipeline().globalParameters.ApiKey",
										"type": "Expression"
									}
								},
								"httpCompressionType": "none"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "code",
											"type": "String"
										},
										"sink": {
											"path": "$['code']"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"path": "$['name']"
										}
									},
									{
										"source": {
											"name": "productSubCategory",
											"type": "String"
										},
										"sink": {
											"path": "$['productSubCategory']"
										}
									},
									{
										"source": {
											"name": "color",
											"type": "String"
										},
										"sink": {
											"path": "$['color']"
										}
									},
									{
										"source": {
											"name": "class",
											"type": "String"
										},
										"sink": {
											"path": "$['class']"
										}
									},
									{
										"source": {
											"name": "weight",
											"type": "Double"
										},
										"sink": {
											"path": "$['weight']"
										}
									},
									{
										"source": {
											"name": "sellEndDate",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['sellEndDate']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "InputBlobCsv",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@pipeline().parameters.FileFolder",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ProfiseeRESTAPI_Members_Update",
								"type": "DatasetReference",
								"parameters": {
									"entityId": {
										"value": "@variables('EntityName')",
										"type": "Expression"
									},
									"isUpsert": true
								}
							}
						]
					},
					{
						"name": "Set EntityName variable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "EntityName",
							"value": {
								"value": "@replace(pipeline().parameters.FileFolder, 'profisee-input/', '')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FileFolder": {
						"type": "string"
					}
				},
				"variables": {
					"EntityName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "REST API"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputBlobCsv')]",
				"[concat(variables('factoryId'), '/datasets/ProfiseeRESTAPI_Members_Update')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy from JSON to Profisee REST API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from JSON to REST API",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set EntityName variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "RestSink",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": 10,
								"requestMethod": "PATCH",
								"writeBatchSize": 10000,
								"additionalHeaders": {
									"x-api-key": "93e4de0d436c4630ae0ca0a1780eee14"
								},
								"httpCompressionType": "none"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "InputBlobJson",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@pipeline().parameters.FileFolder",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ProfiseeRESTAPI_Members_Update",
								"type": "DatasetReference",
								"parameters": {
									"entityId": {
										"value": "@variables('EntityName')",
										"type": "Expression"
									},
									"isUpsert": true
								}
							}
						]
					},
					{
						"name": "Set EntityName variable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "EntityName",
							"value": {
								"value": "@replace(pipeline().parameters.FileFolder, 'profisee-input/', '')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FileFolder": {
						"type": "string"
					}
				},
				"variables": {
					"EntityName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "REST API"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputBlobJson')]",
				"[concat(variables('factoryId'), '/datasets/ProfiseeRESTAPI_Members_Update')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy from Profisee REST API to CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from REST API to CSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-api-key": {
										"value": "@pipeline().globalParameters.ApiKey",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.nextPage"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['internalId']"
										},
										"sink": {
											"name": "internalId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Guid"
										}
									},
									{
										"source": {
											"path": "[['code']"
										},
										"sink": {
											"name": "code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['productSubCategory']"
										},
										"sink": {
											"name": "productSubCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['color']"
										},
										"sink": {
											"name": "color",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['class']"
										},
										"sink": {
											"name": "class",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['style']"
										},
										"sink": {
											"name": "style",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['country']"
										},
										"sink": {
											"name": "country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['standardCost']"
										},
										"sink": {
											"name": "standardCost",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['safetyStockLevel']"
										},
										"sink": {
											"name": "safetyStockLevel",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['reorderPoint']"
										},
										"sink": {
											"name": "reorderPoint",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['msrp']"
										},
										"sink": {
											"name": "msrp",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['weight']"
										},
										"sink": {
											"name": "weight",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['dealerCost']"
										},
										"sink": {
											"name": "dealerCost",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['sellStartDate']"
										},
										"sink": {
											"name": "sellStartDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['sellEndDate']"
										},
										"sink": {
											"name": "sellEndDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['productLine']"
										},
										"sink": {
											"name": "productLine",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['size']"
										},
										"sink": {
											"name": "size",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['changedOn']"
										},
										"sink": {
											"name": "changedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['changedByUser']"
										},
										"sink": {
											"name": "changedByUser",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['validationStatus']"
										},
										"sink": {
											"name": "validationStatus",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['data']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "ProfiseeRESTAPI_Members_Get",
								"type": "DatasetReference",
								"parameters": {
									"entityId": {
										"value": "@variables('EntityName')",
										"type": "Expression"
									},
									"pageSize": 100,
									"attributes": " ",
									"filter": " ",
									"orderBy": " ",
									"dbaFormat": 1,
									"codes": " "
								}
							}
						],
						"outputs": [
							{
								"referenceName": "OutputBlobCsv",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@variables('OutputContainer')",
										"type": "Expression"
									},
									"Directory": {
										"value": "@variables('EntityName')",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(variables('EntityName'), '_', string(utcnow()), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"variables": {
					"OutputContainer": {
						"type": "String",
						"defaultValue": "profisee-output"
					},
					"EntityName": {
						"type": "String",
						"defaultValue": "product"
					}
				},
				"folder": {
					"name": "REST API"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ProfiseeRESTAPI_Members_Get')]",
				"[concat(variables('factoryId'), '/datasets/OutputBlobCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy from Profisee REST API to JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from REST API to JSON",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-api-key": "93e4de0d436c4630ae0ca0a1780eee14"
								},
								"paginationRules": {
									"AbsoluteUrl": "$.nextPage"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['internalId']"
										},
										"sink": {
											"path": "$.internalId"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"path": "$.id"
										}
									},
									{
										"source": {
											"path": "[['code']"
										},
										"sink": {
											"path": "$.code"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"path": "$.name"
										}
									},
									{
										"source": {
											"path": "[['productSubCategory']"
										},
										"sink": {
											"path": "$.productSubCategory"
										}
									},
									{
										"source": {
											"path": "[['standardCost']"
										},
										"sink": {
											"path": "$.standardCost"
										}
									},
									{
										"source": {
											"path": "[['msrp']"
										},
										"sink": {
											"path": "$.msrp"
										}
									},
									{
										"source": {
											"path": "[['dealerCost']"
										},
										"sink": {
											"path": "$.dealerCost"
										}
									},
									{
										"source": {
											"path": "[['sellStartDate']"
										},
										"sink": {
											"path": "$.sellStartDate"
										}
									},
									{
										"source": {
											"path": "[['sellEndDate']"
										},
										"sink": {
											"path": "$.sellEndDate"
										}
									},
									{
										"source": {
											"path": "[['changedOn']"
										},
										"sink": {
											"path": "$.changedOn"
										}
									},
									{
										"source": {
											"path": "[['changedByUser']"
										},
										"sink": {
											"path": "$.changedByUser"
										}
									},
									{
										"source": {
											"path": "[['validationStatus']"
										},
										"sink": {
											"path": "$.validationStatus"
										}
									},
									{
										"source": {
											"path": "[['weight']"
										},
										"sink": {
											"path": "$.weight"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "ProfiseeRESTAPI_Members_Get",
								"type": "DatasetReference",
								"parameters": {
									"entityId": {
										"value": "@variables('EntityName')",
										"type": "Expression"
									},
									"pageSize": 100,
									"attributes": " ",
									"filter": " ",
									"orderBy": " ",
									"dbaFormat": 1,
									"codes": " "
								}
							}
						],
						"outputs": [
							{
								"referenceName": "OutputBlobJson",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@variables('OutputContainer')",
										"type": "Expression"
									},
									"Directory": {
										"value": "@variables('EntityName')",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(variables('EntityName'), '_', string(utcnow()), '.json')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"variables": {
					"OutputContainer": {
						"type": "String",
						"defaultValue": "profisee-output"
					},
					"EntityName": {
						"type": "String",
						"defaultValue": "product"
					}
				},
				"folder": {
					"name": "REST API"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ProfiseeRESTAPI_Members_Get')]",
				"[concat(variables('factoryId'), '/datasets/OutputBlobJson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JSON to Profisee REST API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update JSON to REST API",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set EntityName variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "RestSink",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": 10,
								"requestMethod": "PATCH",
								"writeBatchSize": 10000,
								"additionalHeaders": {
									"x-api-key": "<api key>"
								},
								"httpCompressionType": "none"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "InputBlobJson",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@pipeline().parameters.FileFolder",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ProfiseeRESTAPI_Members_Update",
								"type": "DatasetReference",
								"parameters": {
									"entityId": {
										"value": "@variables('EntityName')",
										"type": "Expression"
									},
									"isUpsert": true
								}
							}
						]
					},
					{
						"name": "Set EntityName variable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "EntityName",
							"value": {
								"value": "@replace(pipeline().parameters.FileFolder, concat(variables('InputContainer'),'/'), '')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FileFolder": {
						"type": "string"
					}
				},
				"variables": {
					"EntityName": {
						"type": "String"
					},
					"InputContainer": {
						"type": "String",
						"defaultValue": "profisee-input"
					}
				},
				"folder": {
					"name": "REST API"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputBlobJson')]",
				"[concat(variables('factoryId'), '/datasets/ProfiseeRESTAPI_Members_Update')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST API direct to Salesforce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "REST API to Salesforce Accounts",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-api-key": "93e4de0d436c4630ae0ca0a1780eee14"
								},
								"paginationRules": {
									"AbsoluteUrl": "$.nextPage"
								}
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "upsert",
								"externalIdFieldName": "ProfiseeCode__c",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['code']"
										},
										"sink": {
											"name": "ProfiseeCode__c",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address Input']"
										},
										"sink": {
											"name": "ShippingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['city Input']"
										},
										"sink": {
											"name": "ShippingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['state Input']"
										},
										"sink": {
											"name": "ShippingState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['zip Input']"
										},
										"sink": {
											"name": "ShippingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['phone']"
										},
										"sink": {
											"name": "Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['website']"
										},
										"sink": {
											"name": "Website",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "ProfiseeRESTAPI_Members_Get",
								"type": "DatasetReference",
								"parameters": {
									"entityId": {
										"value": "@pipeline().parameters.EntityName",
										"type": "Expression"
									},
									"pageSize": 100,
									"attributes": "Address Input,City Input,State Input,Zip Input,Phone,Website",
									"filter": " ",
									"orderBy": " ",
									"dbaFormat": 1
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SalesforceAccount",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"EntityName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "REST API"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ProfiseeRESTAPI_Members_Get')]",
				"[concat(variables('factoryId'), '/datasets/SalesforceAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce direct to REST API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Salesforce Accounts to REST API",
						"description": "Note, the sink is the AddressTest entity.  Used for testing only.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"readBehavior": "query"
							},
							"sink": {
								"type": "RestSink",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": 10,
								"requestMethod": "PATCH",
								"writeBatchSize": 10000,
								"additionalHeaders": {
									"x-api-key": "93e4de0d436c4630ae0ca0a1780eee14"
								},
								"httpCompressionType": "none"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProfiseeCode__c"
										},
										"sink": {
											"path": "$['Code']"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"path": "$['Name']"
										}
									},
									{
										"source": {
											"name": "ShippingStreet",
											"type": "String"
										},
										"sink": {
											"path": "$['Address Input']"
										}
									},
									{
										"source": {
											"name": "ShippingCity",
											"type": "String"
										},
										"sink": {
											"path": "$['City Input']"
										}
									},
									{
										"source": {
											"name": "ShippingState",
											"type": "String"
										},
										"sink": {
											"path": "$['State Input']"
										}
									},
									{
										"source": {
											"name": "ShippingPostalCode",
											"type": "String"
										},
										"sink": {
											"path": "$['Zip Input']"
										}
									},
									{
										"source": {
											"name": "Phone"
										},
										"sink": {
											"path": "$['Phone']"
										}
									},
									{
										"source": {
											"name": "Website"
										},
										"sink": {
											"path": "$['Website']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceAccount",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProfiseeRESTAPI_Members_Update",
								"type": "DatasetReference",
								"parameters": {
									"entityId": "addresstest",
									"isUpsert": true
								}
							}
						]
					}
				],
				"folder": {
					"name": "REST API"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T16:03:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceAccount')]",
				"[concat(variables('factoryId'), '/datasets/ProfiseeRESTAPI_Members_Update')]"
			]
		}
	]
}