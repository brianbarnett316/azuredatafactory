{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "BrianBa-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy from CSV to Profisee REST API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy CSV to REST API",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "RestSink",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": 10,
								"requestMethod": "PATCH",
								"writeBatchSize": 10000,
								"additionalHeaders": {
									"x-api-key": {
										"value": "@pipeline().globalParameters.ApiKey",
										"type": "Expression"
									}
								},
								"httpCompressionType": "none"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AdlsGen2BlobCsv",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@pipeline().parameters.FileFolder",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ProfiseeRESTAPI_Members_Update",
								"type": "DatasetReference",
								"parameters": {
									"entityId": {
										"value": "@replace(pipeline().parameters.FileFolder, 'profisee-input/', '')",
										"type": "Expression"
									},
									"isUpsert": true
								}
							}
						]
					}
				],
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FileFolder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "CSV Format"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdlsGen2BlobCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy from JSON to Profisee REST API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from JSON to REST API",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "RestSink",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": 10,
								"requestMethod": "PATCH",
								"writeBatchSize": 10000,
								"additionalHeaders": {
									"x-api-key": {
										"value": "@pipeline().globalParameters.ApiKey",
										"type": "Expression"
									}
								},
								"httpCompressionType": "none"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AdlsGen2BlobJson",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@pipeline().parameters.FileFolder",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ProfiseeRESTAPI_Members_Update",
								"type": "DatasetReference",
								"parameters": {
									"entityId": {
										"value": "@replace(pipeline().parameters.FileFolder, 'profisee-input/', '')",
										"type": "Expression"
									},
									"isUpsert": true
								}
							}
						]
					}
				],
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FileFolder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "JSON Format"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdlsGen2BlobJson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy from Profisee REST API to CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from Profisee REST API to CSV",
						"description": "Copy records from Profisee via the Profisee REST API to ADLS Gen2 in CSV format.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-api-key": {
										"value": "@pipeline().globalParameters.ApiKey",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.nextPage"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['internalId']"
										},
										"sink": {
											"name": "internalId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Guid"
										}
									},
									{
										"source": {
											"path": "[['code']"
										},
										"sink": {
											"name": "code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['productSubCategory']"
										},
										"sink": {
											"name": "productSubCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['color']"
										},
										"sink": {
											"name": "color",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['class']"
										},
										"sink": {
											"name": "class",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['style']"
										},
										"sink": {
											"name": "style",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['country']"
										},
										"sink": {
											"name": "country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['standardCost']"
										},
										"sink": {
											"name": "standardCost",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['safetyStockLevel']"
										},
										"sink": {
											"name": "safetyStockLevel",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['reorderPoint']"
										},
										"sink": {
											"name": "reorderPoint",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['msrp']"
										},
										"sink": {
											"name": "msrp",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['weight']"
										},
										"sink": {
											"name": "weight",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['dealerCost']"
										},
										"sink": {
											"name": "dealerCost",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['sellStartDate']"
										},
										"sink": {
											"name": "sellStartDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['sellEndDate']"
										},
										"sink": {
											"name": "sellEndDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['productLine']"
										},
										"sink": {
											"name": "productLine",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['size']"
										},
										"sink": {
											"name": "size",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['changedOn']"
										},
										"sink": {
											"name": "changedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['changedByUser']"
										},
										"sink": {
											"name": "changedByUser",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['validationStatus']"
										},
										"sink": {
											"name": "validationStatus",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['data']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "ProfiseeRESTAPI_Members_Get",
								"type": "DatasetReference",
								"parameters": {
									"entityId": {
										"value": "@variables('EntityName')",
										"type": "Expression"
									},
									"pageSize": 100,
									"attributes": " ",
									"filter": " ",
									"orderBy": " ",
									"dbaFormat": 1,
									"codes": " "
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AdlsGen2BlobCsv",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@concat(variables('OutputContainer'), '/', variables('EntityName'))",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(variables('EntityName'), '_', string(utcnow()), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"variables": {
					"OutputContainer": {
						"type": "String",
						"defaultValue": "profisee-output"
					},
					"EntityName": {
						"type": "String",
						"defaultValue": "product"
					}
				},
				"folder": {
					"name": "CSV Format"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdlsGen2BlobCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy from Profisee REST API to JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from Profisee REST API to JSON",
						"description": "Copy records from Profisee via the Profisee REST API to ADLS Gen2 in JSON format.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-api-key": {
										"value": "@pipeline().globalParameters.ApiKey",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.nextPage"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['internalId']"
										},
										"sink": {
											"path": "$['internalId']"
										}
									},
									{
										"source": {
											"path": "[['code']"
										},
										"sink": {
											"path": "$['code']"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"path": "$['name']"
										}
									},
									{
										"source": {
											"path": "[['productSubCategory']"
										},
										"sink": {
											"path": "$['productSubCategory']"
										}
									},
									{
										"source": {
											"path": "[['standardCost']"
										},
										"sink": {
											"path": "$['standardCost']"
										}
									},
									{
										"source": {
											"path": "[['msrp']"
										},
										"sink": {
											"path": "$['msrp']"
										}
									},
									{
										"source": {
											"path": "[['dealerCost']"
										},
										"sink": {
											"path": "$['dealerCost']"
										}
									},
									{
										"source": {
											"path": "[['sellStartDate']"
										},
										"sink": {
											"path": "$['sellStartDate']"
										}
									},
									{
										"source": {
											"path": "[['sellEndDate']"
										},
										"sink": {
											"path": "$['sellEndDate']"
										}
									},
									{
										"source": {
											"path": "[['changedOn']"
										},
										"sink": {
											"path": "$['changedOn']"
										}
									},
									{
										"source": {
											"path": "[['changedByUser']"
										},
										"sink": {
											"path": "$['changedByUser']"
										}
									},
									{
										"source": {
											"path": "[['validationStatus']"
										},
										"sink": {
											"path": "$['validationStatus']"
										}
									},
									{
										"source": {
											"path": "[['weight']"
										},
										"sink": {
											"path": "$['weight']"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "ProfiseeRESTAPI_Members_Get",
								"type": "DatasetReference",
								"parameters": {
									"entityId": {
										"value": "@variables('EntityName')",
										"type": "Expression"
									},
									"pageSize": 100,
									"attributes": " ",
									"filter": " ",
									"orderBy": " ",
									"dbaFormat": 1,
									"codes": " "
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AdlsGen2BlobJson",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@concat(variables('OutputContainer'), '/', variables('EntityName'))",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(variables('EntityName'), '_', string(utcnow()), '.json')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"variables": {
					"OutputContainer": {
						"type": "String",
						"defaultValue": "profisee-output"
					},
					"EntityName": {
						"type": "String",
						"defaultValue": "product"
					}
				},
				"folder": {
					"name": "JSON Format"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdlsGen2BlobJson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce to Ingress Staging Area JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Salesforce Accounts to JSON",
						"description": "Note, the sink is the AddressTest entity.  Used for testing only.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"readBehavior": "query"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"path": "$['Code']"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"path": "$['Name']"
										}
									},
									{
										"source": {
											"name": "BillingStreet"
										},
										"sink": {
											"path": "$['Address Input']"
										}
									},
									{
										"source": {
											"name": "BillingCity"
										},
										"sink": {
											"path": "$['City Input']"
										}
									},
									{
										"source": {
											"name": "BillingState"
										},
										"sink": {
											"path": "$['State Input']"
										}
									},
									{
										"source": {
											"name": "BillingPostalCode"
										},
										"sink": {
											"path": "$['Zip Input']"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"path": "$['Phone']"
										}
									},
									{
										"source": {
											"name": "Website",
											"type": "String"
										},
										"sink": {
											"path": "$['Website']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceAccount",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AdlsGen2BlobJson",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@concat(variables('OutputContainer'), '/addresstest')",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('addresstest_', string(utcnow()), '.json')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"variables": {
					"InputContainer": {
						"type": "String",
						"defaultValue": "profisee-input"
					},
					"OutputContainer": {
						"type": "String",
						"defaultValue": "profisee-output"
					}
				},
				"folder": {
					"name": "Salesforce"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T16:03:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdlsGen2BlobJson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdlsGen2BlobCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Data Lake Storage Gen2 container for CSV format.",
				"linkedServiceName": {
					"referenceName": "BlobStorageGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "CSV Format"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdlsGen2BlobJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Data Lake Storage Gen2 container for JSON format.",
				"linkedServiceName": {
					"referenceName": "BlobStorageGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "JSON Format"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": []
		}
	]
}